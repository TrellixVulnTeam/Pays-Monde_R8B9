{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\watch\\\\OneDrive\\\\Bureau\\\\cours-react\\\\src\\\\components\\\\Countries.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [dataSorted, setDataSorted] = useState([]);\n  const playOnce = true;\n  useEffect(() => {\n    if (playOnce) {\n      axios.get('https://restcountries.com/v3.1/all?fields=name,population,region,capital,flags,flag').then(res => setData(res.data));\n      playOnce = false;\n    }\n\n    const sortedCountry = () => {\n      //On transforme la promise data en Objet\n      const countryObj = Object.keys(data).map(i => data[i]);\n      const sortedArray = countryObj.sort((a, b) => {\n        return b.population - a.population;\n      });\n    }; // setDataSorted(sortedCountry());\n\n\n    sortedCountry();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countries\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"countries-list\",\n      children: data.map(country => /*#__PURE__*/_jsxDEV(Card, {\n        country: country\n      }, country.name.common, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 43\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Countries, \"w3iAacQHmoPozR2E0Ig9DGF+TQU=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["C:/Users/watch/OneDrive/Bureau/cours-react/src/components/Countries.js"],"names":["React","useState","useEffect","axios","Card","Countries","data","setData","dataSorted","setDataSorted","playOnce","get","then","res","sortedCountry","countryObj","Object","keys","map","i","sortedArray","sort","a","b","population","country","name","common"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMS,QAAQ,GAAG,IAAjB;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,QAAJ,EAAc;AACVP,MAAAA,KAAK,CAACQ,GAAN,CAAU,qFAAV,EAAiGC,IAAjG,CAAuGC,GAAD,IACtGN,OAAO,CAACM,GAAG,CAACP,IAAL,CADP;AAEAI,MAAAA,QAAQ,GAAG,KAAX;AACH;;AACD,UAAMI,aAAa,GAAG,MAAK;AACvB;AACA,YAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBY,GAAlB,CAAuBC,CAAD,IAAOb,IAAI,CAACa,CAAD,CAAjC,CAAnB;AACA,YAAMC,WAAW,GAAGL,UAAU,CAACM,IAAX,CAAgB,CAACC,CAAD,EAAGC,CAAH,KAAS;AACzC,eAAOA,CAAC,CAACC,UAAF,GAAeF,CAAC,CAACE,UAAxB;AACH,OAFmB,CAApB;AAGH,KAND,CANY,CAab;;;AACAV,IAAAA,aAAa;AACf,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA,gBACKR,IAAI,CAACY,GAAL,CAAWO,OAAD,iBAAe,QAAC,IAAD;AAAM,QAAA,OAAO,EAAEA;AAAf,SAA6BA,OAAO,CAACC,IAAR,CAAaC,MAA1C;AAAA;AAAA;AAAA;AAAA,cAAzB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA5BD;;GAAMtB,S;;KAAAA,S;AA8BN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst Countries = () => {\r\n    const [data, setData] = useState([]);\r\n    const [dataSorted, setDataSorted] = useState([]);\r\n    const playOnce = true;\r\n    useEffect(() => {\r\n        if (playOnce) {\r\n            axios.get('https://restcountries.com/v3.1/all?fields=name,population,region,capital,flags,flag').then((res) =>\r\n            setData(res.data));\r\n            playOnce = false ;\r\n        }\r\n        const sortedCountry = () =>{\r\n            //On transforme la promise data en Objet\r\n            const countryObj = Object.keys(data).map((i) => data[i]) ;\r\n            const sortedArray = countryObj.sort((a,b) => {\r\n                return b.population - a.population ;\r\n            });\r\n        }\r\n       // setDataSorted(sortedCountry());\r\n       sortedCountry();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='countries'>\r\n            <ul className='countries-list'>\r\n                {data.map( (country) => ( <Card country={country} key={country.name.common} /> ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Countries;"]},"metadata":{},"sourceType":"module"}