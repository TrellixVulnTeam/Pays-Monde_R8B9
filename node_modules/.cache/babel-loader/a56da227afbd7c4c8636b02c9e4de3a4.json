{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\watch\\\\OneDrive\\\\Bureau\\\\cours-react\\\\src\\\\components\\\\Countries.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [dataSorted, setDataSorted] = useState([]);\n  const [playOnce, setPlayOnce] = useState(true);\n  const [rangeValue, setRangeValue] = useState(40);\n  const [selectedRadio, setSelectedRadio] = useState('');\n  const radios = [\"Africa\", \"America\", \"Europ\", \"Asia\", \"Oceania\"];\n  useEffect(() => {\n    if (playOnce) {\n      axios.get('https://restcountries.com/v3.1/all?fields=name,population,region,capital,flags,flag').then(res => setData(res.data));\n      setPlayOnce(false);\n    }\n\n    const sortedCountry = () => {\n      //On transforme la promise data en Objet\n      const countryObj = Object.keys(data).map(i => data[i]);\n      const sortedArray = countryObj.sort((a, b) => {\n        return b.population - a.population;\n      });\n      sortedArray.length = rangeValue;\n      console.log(sortedArray);\n      setDataSorted(sortedArray);\n    };\n\n    sortedCountry();\n  }, [data, rangeValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countries\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"250\",\n        value: rangeValue,\n        onChange: e => setRangeValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: radios.map(radio => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"radio\",\n              id: radio,\n              checked: radio === selectedRadio,\n              value: radio,\n              onChange: e => {\n                setSelectedRadio(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: radio,\n              children: [\" \", radio, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 36\n            }, this)]\n          }, radio, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cancel\",\n      onClick: e => setSelectedRadio(''),\n      children: selectedRadio && /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Annuler Recherche\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"countries-list\",\n      children: dataSorted.filter(country => country.region.includes(selectedRadio)).map(country => /*#__PURE__*/_jsxDEV(Card, {\n        country: country\n      }, country.name.common, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Countries, \"ga2Q3mZTSRcYOnFE1pED6goDuq8=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["C:/Users/watch/OneDrive/Bureau/cours-react/src/components/Countries.js"],"names":["React","useState","useEffect","axios","Card","Countries","data","setData","dataSorted","setDataSorted","playOnce","setPlayOnce","rangeValue","setRangeValue","selectedRadio","setSelectedRadio","radios","get","then","res","sortedCountry","countryObj","Object","keys","map","i","sortedArray","sort","a","b","population","length","console","log","e","target","value","radio","filter","country","region","includes","name","common"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst Countries = () => {\r\n    const [data, setData] = useState([]);\r\n    const [dataSorted, setDataSorted] = useState([]);\r\n    const [playOnce, setPlayOnce] = useState(true);\r\n    const [rangeValue, setRangeValue] = useState(40);\r\n    const [selectedRadio, setSelectedRadio] = useState('');\r\n\r\n    const radios = [\"Africa\", \"America\", \"Europ\", \"Asia\", \"Oceania\"];\r\n    \r\n    useEffect(() => {\r\n        if (playOnce) {\r\n            axios.get('https://restcountries.com/v3.1/all?fields=name,population,region,capital,flags,flag').then((res) =>\r\n            setData(res.data));\r\n            setPlayOnce(false);\r\n        }\r\n        const sortedCountry = () =>{\r\n            //On transforme la promise data en Objet\r\n            const countryObj = Object.keys(data).map((i) => data[i]) ;\r\n            const sortedArray = countryObj.sort((a,b) => {\r\n                return b.population - a.population ;\r\n            });\r\n            sortedArray.length = rangeValue;\r\n            console.log(sortedArray);\r\n            setDataSorted(sortedArray);\r\n        }\r\n       \r\n       sortedCountry();\r\n    }, [data, rangeValue]);\r\n\r\n    return (\r\n        <div className='countries'>\r\n            <div className='sort-container'>\r\n                   <input type='range' min='1' max = '250'\r\n                    value={rangeValue} onChange={(e) => setRangeValue(e.target.value)}>\r\n                   </input> \r\n                   <ul>\r\n                       {radios.map((radio) => {\r\n                           return (\r\n                               <li key={radio}  >\r\n                                   <input type='radio' name='radio' id={radio} checked= {radio === selectedRadio}\r\n                                   value={radio} onChange ={(e) => {setSelectedRadio(e.target.value) \r\n                                    } } ></input>\r\n                                   <label htmlFor={radio}> {radio} </label>\r\n                                </li>  \r\n                           )\r\n                       })}\r\n                   </ul>\r\n            </div>\r\n            <div className='cancel' onClick={(e)=> setSelectedRadio('')}>\r\n                       {selectedRadio && <h5>Annuler Recherche</h5>}\r\n            </div>\r\n            <ul className='countries-list'>\r\n                {dataSorted.filter((country) => country.region.includes(selectedRadio))\r\n                .map( (country) => ( <Card country={country} key={country.name.common} /> ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Countries;"]},"metadata":{},"sourceType":"module"}